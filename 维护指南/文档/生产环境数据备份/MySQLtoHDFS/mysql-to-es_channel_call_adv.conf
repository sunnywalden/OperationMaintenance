input{
     jdbc {
         jdbc_driver_library => "/usr/share/java/mysql-connector-java.jar"
         jdbc_driver_class => "com.mysql.jdbc.Driver"
         jdbc_connection_string => "jdbc:mysql://rm-uf6731vc9ifc8m0yqo.mysql.rds.aliyuncs.com:3306/advcas"
         jdbc_user => "******"
         jdbc_password => "******"
         jdbc_paging_enabled => "true"
         jdbc_page_size => "25000"
         jdbc_default_timezone =>"Asia/Shanghai"
         schedule => "* * * * *"
         statement => "select id,idfa,cpaId,sourceId,cid,scName,status,tryCount,lastTryTime,callAdvUrl,lastResponseMsg,insertTime from cas_call_adv_v2 where id > :sql_last_value LIMIT 50000"
         columns_charset => { "scName" => "UTF-8" }
         jdbc_fetch_size => "350000"
         record_last_run => "true"
         use_column_value => "true"
         tracking_column => "id"
         last_run_metadata_path => "/tmp/channel_call_adv_last_id"
         clean_run => "false"
         lowercase_column_names => "false" 
         type => "callAdvNumber"
       } 
}

filter {
    mutate {
        rename => ["idfa", "uuid"]
        rename => ["cpaId", "orderId"]
#        rename => ["sourceId", "sourceId"]
        rename => ["cid", "scid"]
#        rename => ["scName", "scName"]
#        rename => ["status", "status"]
        rename => ["tryCount", "repeatTime"]
#        rename => ["lastTryTime", "lastTryTime"]
#        rename => ["callAdvUrl", "callAdvUrl"]
        rename => ["lastResponseMsg", "responseMsg"]
        rename => ["insertTime", "callAdvTime"]
#        replace => { "type" => "callAdvNumber" }
  }
}
 
output{
     if [type] == "callAdvNumber" {
        file { path => "/tmp/test.log" }
        webhdfs {
           host => "192.168.1.83"
           port => 50070
           path => "/online_history_backup/%{+YYYY-MM-dd}/jc-history-channelcalladv-%{+YYYY-MM-dd}.log"
           user => "hadoop"
           compression => "snappy"
           snappy_format => "stream"
       }
     }
     else {
       stdout {
         codec => json_lines
       }
     }
 } 
